-- Questão 1: Atualizar débitos vencidos e não 'Negociado' nem 'Pago' para 'Atrasado'

UPDATE DEBITOS d SET SITUACAO_DEBITO = 'Atrasado'
 WHERE d.DATAVENCIMENTO <CURRENT_DATE
   AND SITUACAO_DEBITO NOT IN ('Negociado', 'Pago');
   
-- Questão 2: Atualizar débitos não vencidos e não 'Pago' para 'Pendente'
 
UPDATE DEBITOS d SET SITUACAO_DEBITO = 'Pendente'
 WHERE d.DATAVENCIMENTO >CURRENT_DATE
 AND SITUACAO_DEBITO NOT IN ('Pago');
 
-- Questão 3: Atualizar data de vencimento de débitos 'Negociado' para 5 anos atrás
 UPDATE DEBITOS d SET SITUACAO_DEBITO = DATEADD(-5 YEAR TO d.DATAVENCIMENTO)
 WHERE SITUACAO_DEBITO = 'Negociado';
 
-- Questão 4: Selecionar nome, e-mail e telefone de todas as pessoas
 
 SELECT p.NOME, p.EMAIL, p.TELEFONE 
   FROM PESSOA p;
   
-- Questão 5: Listar produtos com preço unitário acima de R$ 100
   
 SELECT p.PRECO_UNITARIO, p.NOME 
   FROM PRODUTO p 
  WHERE PRECO_UNITARIO > 100;
  
-- Questão 6: Retornar todas as vendas realizadas em uma determinada data
 
 SELECT v.*
 FROM VENDA v
 WHERE data_venda >= '2023-05-10';
 
-- Questão 7: Mostrar nome, data de nascimento e idade de fornecedores sem produtos em estoque

SELECT p.nome, p.DATA_NASCIMENTO,
EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.data_nascimento) AS idade
FROM fornecedor f
LEFT JOIN PESSOA p ON p.ID_PESSOA = f.ID_PESSOA
LEFT JOIN produto pr ON pr.id_fornecedor = f.id_fornecedor
WHERE pr.id_fornecedor IS NULL OR pr.quantidade_estoque = 0;

-- Questão 8: Listar clientes que já realizaram compras com débitos vencidos

SELECT p.nome
FROM cliente c
LEFT JOIN PESSOA p ON p.ID_PESSOA = c.ID_PESSOA 
LEFT JOIN venda v ON c.ID_PESSOA = v.ID_PESSOA 
LEFT JOIN debitos d ON v.id_venda = d.id_venda
WHERE d.datavencimento < CURRENT_DATE
GROUP BY p.nome;

-- Questão 10: Selecionar os 10 maiores devedores com soma total de débitos vencidos e pagos



-- Questão 11: Atualizar o preço unitário dos produtos com estoque inferior a 10 para mais 10%

UPDATE PRODUTO p SET PRECO_UNITARIO = PRECO_UNITARIO * 1.10
WHERE p.PRECO_UNITARIO < 10 